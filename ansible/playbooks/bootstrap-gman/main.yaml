---
- name: Bootstrap gman
  hosts: gman.local
  become: true
  gather_facts: true
  vars_prompt:
    - name: ansible_sudo_pass
      prompt: Sudo password
      private: true
  tasks:
    - name: Install docker
      ansible.builtin.import_role:
        name: docker

    - name: IP Forwarding enable/persist
      ansible.posix.sysctl:
        name: net.ipv4.ip_forward
        value: "1"
        state: present
        sysctl_set: true

    - name: Traefik
      community.docker.docker_container:
        name: traefik
        image: traefik:latest
        command:
          - --api.insecure=true
          - --providers.docker=true
          - --providers.docker.exposedByDefault=false
        pull: missing
        restart_policy: unless-stopped
        etc_hosts:
          host.docker.internal: host-gateway
        ports:
          - 80:80
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
        labels:
          traefik.enable: "true"
          traefik.http.services.traefik.loadbalancer.server.port: "8080"
          traefik.http.routers.traefik.rule: Host(`traefik.gman.local`)

    - name: Portainer
      community.docker.docker_container:
        name: portainer
        image: portainer/portainer-ce:latest
        pull: missing
        restart_policy: unless-stopped
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - /opt/portainer:/data
        labels:
          traefik.enable: "true"
          traefik.http.services.portainer.loadbalancer.server.port: "9000"
          traefik.http.routers.portainer.rule: Host(`portainer.gman.local`)

    - name: Adguard
      community.docker.docker_container:
        name: adguard
        image: adguard/adguardhome:latest
        pull: missing
        restart_policy: unless-stopped
        ports:
          # - "3000:3000/tcp"
          # dns
          - 53:53/tcp
          - 53:53/udp
          # dns over https
          - 443:443/tcp
          - 443:443/udp
          # dns over tls
          - 853:853/tcp
          - 853:853/udp
        volumes:
          - /opt/adguard/work:/opt/adguardhome/work:rw
          - /opt/adguard/conf:/opt/adguardhome/conf:rw
        labels:
          traefik.enable: "true"
          traefik.http.services.adguard.loadbalancer.server.port: "80"
          traefik.http.routers.adguard.rule: Host(`adguard.gman.local`)

    - name: Gluetun
      community.docker.docker_container:
        name: gluetun
        image: qmcgaw/gluetun:latest
        pull: missing
        restart_policy: unless-stopped
        env:
          VPN_SERVICE_PROVIDER: mullvad
          VPN_TYPE: wireguard
          WIREGUARD_PRIVATE_KEY: "{{ vpn.wireguard_private_key }}"
          WIREGUARD_ADDRESSES: "{{ vpn.wireguard_ipv4_address }}"
          WIREGUARD_ENDPOINT_PORT: "{{ vpn.wireguard_port }}"
          SERVER_COUNTRIES: Australia
          TZ: Australia/Brisbane
        ports:
          - 8888:8888/tcp # http
          - 8388:8388/tcp # shadowsocks
          - 8388:8388/udp
        volumes:
          - /opt/gluetun:/gluetun
        devices:
          - /dev/net/tun
        capabilities:
          - NET_ADMIN

    - name: Node exporter
      community.docker.docker_container:
        name: node-exporter
        image: quay.io/prometheus/node-exporter:latest
        pull: missing
        restart_policy: unless-stopped
        command:
          - --path.rootfs=/host
        network_mode: host
        pid_mode: host
        ports:
          - 9100:9100
        volumes:
          - /:/host:ro,rslave
