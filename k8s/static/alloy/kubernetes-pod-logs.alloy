discovery.kubernetes "pods" {
	role = "pod"

	selectors {
		role  = "pod"
		field = "spec.nodeName=" + sys.env("HOSTNAME")
	}
}

discovery.relabel "pods" {
	targets = discovery.kubernetes.pods.targets

	rule {
		source_labels = ["__meta_kubernetes_namespace"]
		action        = "replace"
		target_label  = "namespace"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_name"]
		action        = "replace"
		target_label  = "pod"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_container_name"]
		action        = "replace"
		target_label  = "container"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_node_name"]
		action        = "replace"
		target_label  = "node"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_label_app_kubernetes_io_name"]
		action        = "replace"
		target_label  = "app_name"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_container_id"]
		action        = "replace"
		target_label  = "__meta_kubernetes_pod_container_runtime"
		regex         = "^(\\S+):\\/\\/.+$"
		replacement   = "$1"
	}

	rule {
		source_labels = ["__meta_kubernetes_namespace", "__meta_kubernetes_pod_name", "__meta_kubernetes_pod_uid"]
		action        = "replace"
		target_label  = "__meta_kubernetes_pod_log_id"
		separator     = "_"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_log_id", "__meta_kubernetes_pod_container_name"]
		action        = "replace"
		target_label  = "__path__"
		separator     = "/"
		replacement   = "/var/log/pods/$1/*"
	}
}

local.file_match "pod_logs" {
	path_targets = discovery.relabel.pods.output
}

loki.source.file "pod_logs" {
	targets    = local.file_match.pod_logs.targets
	forward_to = [loki.process.pod_logs.receiver]
}

loki.process "pod_logs" {
	// stage.decolorize { }

	stage.regex {
		expression = "^(?P<timestamp>\\S+) (?P<stream>stdout|stderr) (?P<flags>\\S+?) (?P<content>.*)$"
	}

	stage.labels {
		values = {"stream" = "stream", "flags" = "flags"}
	}

	stage.output {
		source = "content"
	}

	forward_to = [loki.write.default.receiver]
}
