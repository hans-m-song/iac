{{- range $name, $issuer := .Values.issuers }}
{{- $pkSecretName := coalesce $.Values.privateKey.secretName (printf "%s-%s" $.Release.Name (kebabcase $name)) }}
{{- $email := required "issuer.email is required" $issuer.email }}
{{- $server := $issuer.isProduction | ternary $.Values.acme.production $.Values.acme.staging }}
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: {{ $.Release.Name }}-{{ $name | kebabcase }}
  namespace: {{ $.Release.Namespace }}
spec:
  acme:
    email: {{ $email }}
    server: {{ $server }}
    privateKeySecretRef:
      name: {{ $pkSecretName }}
    solvers:
      {{- range $index, $solverName := $issuer.solvers }}
      {{- $solver :=  required (printf "solver is not defined: %s" $solverName) (get $.Values.solvers $solverName) }}
      {{- if eq $solver.kind "dns01_route53" }}
      - dns01:
          route53:
            region: {{ $solver.region }}
            hostedZoneID: {{ $solver.hostedZoneID }}
            accessKeyID: {{ $solver.accessKeyID }}
            secretAccessKeySecretRef:
              name: {{ $.Release.Name }}-credentials
              key: {{ $solverName }}_secret_access_key
        {{- if $solver.dnsZone }}
        selector:
          dnsZones:
            - {{ $solver.dnsZone }}
        {{- end }}
      {{- else }}
      {{- fail "please specify a solver type" }}
      {{- end }}
      {{- end }}
{{- end -}}
