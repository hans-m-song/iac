{{- if gt (len .Values.containers) 0 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels: {{- include "generic.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels: {{- include "generic.selectors" . | nindent 6 }}
  replicas: {{ .Values.deployment.replicas }}
  strategy: {{ .Values.deployment.strategy | toYaml | nindent 4 }}
  template:
    metadata:
      labels: {{- include "generic.selectors" . | nindent 8 }}
    spec:
      {{- $volumes := dict }}
      {{- range $container := .Values.containers }}
      {{- $containerVolumes := $container.volumes | default (dict) }}
      {{- $volumes = merge $volumes $containerVolumes }}
      {{- end }}
      {{- if gt (len $volumes) 0 }}
      volumes:
      {{- range $name, $volume := $volumes }}
      - name: {{ $name }}
        {{- $volume.spec | toYaml | nindent 8 }}
      {{- end }}
      {{- end }}

      serviceAccountName: {{ default .Release.Name .Values.rbac.serviceAccountName }}
      
      {{- if .Values.deployment.nodeSelector }}
      nodeSelector: {{ .Values.deployment.nodeSelector | toYaml | nindent 8 }}
      {{- end }}

      containers:
      {{- range $name, $container := .Values.containers }}
      {{- $ports := $container.ports | default (dict) }}
      {{- $env := $container.env | default (dict) }}
      {{- $envFrom := $container.envFrom | default (list) }}
      {{- $volumes := $container.volumes | default (dict) }}
      {{- $args := $container.args | default (list) }}
      {{- $command := $container.command | default (list) }}
      - name: {{ $name }}
        image: {{ $container.image }}
        imagePullPolicy: {{ default "IfNotPresent" $container.imagePullPolicy }}
        resources:
          limits:
            cpu: {{ dig "resources" "limits" "cpu" "100m" $container }}
            memory: {{ dig "resources" "limits" "memory" "256Mi" $container }}
          requests:
            cpu: {{ dig "resources" "requests" "cpu" "100m" $container }}
            memory: {{ dig "resources" "requests" "memory" "256Mi" $container }}

        {{- if $container.lifecycle }}
        lifecycle: {{ $container.lifecycle | toYaml | nindent 10 }}
        {{- end }}

        {{- if $container.securityContext }}
        securityContext: {{ $container.securityContext | toYaml | nindent 10 }}
        {{- end }}

        {{- if gt (len $args) 0 }}
        args: {{ $args | toYaml | nindent 10 }}
        {{- end }}

        {{- if gt (len $command) 0 }}
        command: {{ $command | toYaml | nindent 10 }}
        {{- end }}

        {{- if gt (len $ports) 0 }}
        ports:
        {{- range $name, $port := $ports }}
        - name: {{ $name }}
          containerPort: {{ $port.internalPort }}
          protocol: {{ $port.protocol }}
        {{- end }}
        {{- end }}
        
        {{- if gt (len $env) 0 }}
        env:
        {{- range $key, $value := $env }}
        - name: {{ $key }}
          value: {{ quote $value }}
        {{- end }}
        {{- end }}
        
        {{- if gt (len $.Values.secrets) 0 }}
        {{- $envFrom = append $envFrom (dict "secretRef" (dict "name" $.Release.Name)) }}
        {{- end }}
        {{- if gt (len $envFrom) 0 }}
        envFrom: {{ $envFrom | toYaml | nindent 8 }}
        {{- end }}
        
        {{- if gt (len $volumes) 0 }}
        volumeMounts:
        {{- range $name, $config := $volumes }}
        - name: {{ $name }}
          {{- $config.mount | toYaml | nindent 10 }}
        {{- end }}
        {{- end }}

        {{- if $container.readinessProbe }}
        readinessProbe: {{- $container.readinessProbe | toYaml | nindent 10 }}
        {{- end }}

        {{- if $container.livenessProbe }}
        livenessProbe: {{- $container.livenessProbe | toYaml | nindent 10 }}
        {{- end }}
      {{- end }}
{{- end }}
